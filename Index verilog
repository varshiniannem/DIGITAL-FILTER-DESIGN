module fir_filter (
    input clk,
    input rst,
    input signed [15:0] x,
    output reg signed [31:0] y
);
    parameter N = 5;

    reg signed [15:0] coeffs[0:N-1];
    initial begin
        coeffs[0] = 16'sd2;
        coeffs[1] = 16'sd4;
        coeffs[2] = 16'sd6;
        coeffs[3] = 16'sd4;
        coeffs[4] = 16'sd2;
    end

    reg signed [15:0] shift_reg[0:N-1];
    integer i;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            for (i = 0; i < N; i = i + 1)
                shift_reg[i] <= 0;
            y <= 0;
        end else begin
            for (i = N-1; i > 0; i = i - 1)
                shift_reg[i] <= shift_reg[i-1];
            shift_reg[0] <= x;

            y <= 0;
            for (i = 0; i < N; i = i + 1)
                y <= y + shift_reg[i] * coeffs[i];
        end
    end
endmodule
